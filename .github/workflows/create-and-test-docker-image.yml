name: Create and test Docker image

on:
  workflow_call:
    inputs:
      source-directory:
        description: 'The source directory relative to the repository root.'
        type: string
        required: true
      image-tag:
        description: 'The image tag to use for the Docker image.'
        type: string
        required: true

jobs:
  build_and_test:
    name: Build, test and publish Docker image
    runs-on: ubuntu-latest
    services:
      sqlsrv:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: Y
          MSSQL_PID: Developer
          SA_PASSWORD: ${{ secrets.TESTS_SQLSRV_DB_SECRET }}
        ports:
          - 1433:1433
        options: >-
          --health-cmd "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P ${SA_PASSWORD} -No -Q 'SELECT 1' || exit 1"
          --health-interval 10s
          --health-timeout 3s
          --health-retries 20
    steps:
      - uses: actions/checkout@master

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build ${{ inputs.image-tag }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.source-directory }}
          tags: ${{ inputs.image-tag }}
          platforms: linux/amd64
          load: true
          
      - name: Test SQL Server connection
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ inputs.image-tag }}
          options: -v ${{ github.workspace }}/.ci/tests:/work -e MSSQL_HOST=sqlsrv -e MSSQL_PORT=1433 -e MSSQL_DATABASE=master -e MSSQL_USERNAME=sa -e MSSQL_PASSWORD=${{ secrets.TESTS_SQLSRV_DB_SECRET }}
          run: php /work/test_connection.php

      - name: Push ${{ inputs.image-tag }}
        uses: docker/build-push-action@v6
        if: ${{ github.event_name != 'pull_request' }}
        with:
          context: ${{ inputs.source-directory }}
          tags: ${{ inputs.image-tag }}
          platforms: linux/amd64
          push: true
